#!/usr/bin/env siesta
# vim: set ft=jinja


{% set comment_id|run()|trim("\n") %}
repo="$(gh repo view --json nameWithOwner | jq '.nameWithOwner' --raw-output)"
url="/repos/$repo/issues/comments?sort=created\&direction=desc"
jq_query='.[] | (.id|tostring) + ";" + .user.login + ";" + .created_at + ";" + .body'
gh api \
  -H "Accept: application/vnd.github+json" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  $url | jq "$jq_query" | column -t -s';' | cut -d'"' -f2 | fzf | awk '{print $1}'
{% endset %}

{% set comment|run()|json %}
repo="$(gh repo view --json nameWithOwner | jq '.nameWithOwner' --raw-output)"
gh api \
  -H "Accept: application/vnd.github+json" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  "/repos/$repo/issues/comments/{{comment_id}}"
{% endset %}



{{diff}}

{% set file_contents|run|catfiles %}
gh pr view --json files | jq '.files | .[] | .path' --raw-output
{% endset %}

{{file_contents}}


{% set changes|prompt("gemini/gemini-2.5-pro-preview-06-05") %}

# Instructions
{{ comment.body }}

{% if comment.diff_hunk -%}
  ## Diff hunk
  ```
  {{ comment.diff_hunk }}
  ```
{%- endif %}

{% if comment.path -%}
  ## Path
  ```
  {{ comment.path }}
  ```
{% endif -%}

### PR Diff
```
{% filter run %}
gh pr diff
{% endfilter %}
```

### PR Files
```
{{file_contents}}
```

# Output
Print whole changed files.

{% endset %}



{% set changes_json|prompt("gemini/gemini-2.5-flash-preview-05-20")|code|json %}
Map the following to a JSON dict: filename -> contents
```
{{changes}}
```
{% endset %}

{% for filename, content in changes_json.items() %}
  {{ content|write(filename) }}
{% endfor %}
