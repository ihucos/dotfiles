#!/usr/bin/env siesta
# vim: set ft=jinja


{% set branch|run|trim("\n") %}
git rev-parse --abbrev-ref HEAD
{% endset %}

{% if input %}
  {% set changes = input %}
{% else %}
  {% set ticket = branch.split('-')[0] ~ '-' ~ branch.split('-')[1] %}
  {% set changes|run %}
  jira issues show {{ ticket|escape }} | sed '1d;2d;3d;5d;6d;7d;8d;$d' | sed 's/^  //'
  {% endset %} 
{% endif %}

# Changes:
{{changes}}

{% set files|prompt("gemini/gemini-2.5-flash-preview-05-20")|code %}

# Requested code changes
```
{{changes}}
```

# Project files and their tags
```
{% filter run %}
for file in $(git ls-files); do
  echo -n "$file: "
  ctags -f- "$file" 2>/dev/null | awk '{ print $1 }' | xargs | sed 's/ /, /g'
done
{% endfilter %}


# Task

List all files that could be relevant to the requested code. In a code block.

{% endset %}

# Files to change:
{{files}}




{% set changes|prompt("gemini/gemini-2.5-pro-preview-06-05") %}
# Implement the following changes.
```
{{changes}}
```

# Files for context
```
{{files|catfiles}}
```

Output the whole files you changed.
{% endset %}




{% set changes_json|prompt("gemini/gemini-2.5-flash-preview-05-20")|code|json %}
Map the following to a JSON dict: filename -> contents
```
{{changes}}
```
{% endset %}

{% for filename, content in changes_json.items() %}
  {{ content|write(filename) }}
{% endfor %}


Wrote changes.
