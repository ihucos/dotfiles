set -g prefix C-Space
unbind C-b # Free original Ctrl-b for emacs style text bindings
set -g mouse

set -g default-terminal "screen-256color"

# set -g default-shell $SHELL 
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"
set -g default-command "${SHELL}"
# set -g default-command "plash -Ur --include $HOME/.plash.yaml"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
wheel_up="if-shell -F -t = \"#{mouse_any_flag}\" \"send-keys -M\" \"if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'\""
bind -n WheelUpPane if-shell "$is_vim" "send-keys C-y"  "$wheel_up"
bind -n WheelDownPane if-shell "$is_vim" "send-keys C-e"  "select-pane -t= \; send-keys -M"
# bind -n MouseDown1Pane if-shell "$is_vim" "send-keys Escape :set Space mouse=a Enter; send-keys MouseDown1Pane" "send-keys MouseDown1Pane"

# bind-key -t emacs-copy MouseDragEnd1Pane copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "reattach-to-user-namespace pbcopy"

bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# bind -n C-i  if-shell "tmux list-windows | grep '^20:'" "select-window -t 20" "new-window -t 20 -n i;"
bind -n C-j  if-shell "tmux list-windows | grep '^0:'" "select-window -t 0" "new-window -t 0 -n j;"
bind -n C-k  if-shell "tmux list-windows | grep '^1:'" "select-window -t 1" "new-window -t 1 -n n;"
